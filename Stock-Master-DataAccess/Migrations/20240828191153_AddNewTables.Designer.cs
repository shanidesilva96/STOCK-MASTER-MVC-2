// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock_Master_DataAccess.DataContext;

#nullable disable

namespace Stock_Master_DataAccess.Migrations
{
    [DbContext(typeof(StockManagementContext))]
    [Migration("20240828191153_AddNewTables")]
    partial class AddNewTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Stock_Master_DataAccess.Models.Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankId"), 1L, 1);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BankId");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_CATEGORY", b =>
                {
                    b.Property<int>("Item_Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Item_Category_ID"), 1L, 1);

                    b.Property<string>("Item_Category_Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Item_Category_ID");

                    b.ToTable("SM_CATEGORY");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_DOCTOR_DETAILS", b =>
                {
                    b.Property<int>("Dr_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dr_ID"), 1L, 1);

                    b.Property<string>("REGISTATION_NO")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Dr_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("SM_DOCTOR_DETAILS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_GRN", b =>
                {
                    b.Property<int>("GRN_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRN_ID"), 1L, 1);

                    b.Property<DateTime>("Received_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SM_SUPPLIERSSupplier_ID")
                        .HasColumnType("int");

                    b.Property<int>("Submit_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Submit_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Supplier_ID")
                        .HasColumnType("int");

                    b.HasKey("GRN_ID");

                    b.HasIndex("SM_SUPPLIERSSupplier_ID");

                    b.HasIndex("Submit_By");

                    b.ToTable("SM_GRN");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_GRN_DETAILS", b =>
                {
                    b.Property<int>("GRN_DETAILS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRN_DETAILS_ID"), 1L, 1);

                    b.Property<DateTime>("Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GRN_ID")
                        .HasColumnType("int");

                    b.Property<int>("Item_ID")
                        .HasColumnType("int");

                    b.Property<int>("Number_Of_Bulk")
                        .HasColumnType("int");

                    b.Property<int>("Number_Of_Item_Per_Bulk")
                        .HasColumnType("int");

                    b.Property<int>("Number_Of_Separate_Item")
                        .HasColumnType("int");

                    b.Property<int>("SM_GRNGRN_ID")
                        .HasColumnType("int");

                    b.Property<int>("SM_ITEMSItem_ID")
                        .HasColumnType("int");

                    b.HasKey("GRN_DETAILS_ID");

                    b.HasIndex("SM_GRNGRN_ID");

                    b.HasIndex("SM_ITEMSItem_ID");

                    b.ToTable("SM_GRN_DETAILS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_INVENTORY", b =>
                {
                    b.Property<int>("Inv_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inv_ID"), 1L, 1);

                    b.Property<string>("Bulk_MAINT_ID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Bulk_Serial_No")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GRN_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Bulk_Item")
                        .HasColumnType("bit");

                    b.Property<int>("Item_ID")
                        .HasColumnType("int");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<int>("SM_GRNGRN_ID")
                        .HasColumnType("int");

                    b.Property<int>("SM_ITEMSItem_ID")
                        .HasColumnType("int");

                    b.HasKey("Inv_ID");

                    b.HasIndex("SM_GRNGRN_ID");

                    b.HasIndex("SM_ITEMSItem_ID");

                    b.ToTable("SM_INVENTORY");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_INVENTORY_DETAILS", b =>
                {
                    b.Property<int>("Inv_Details_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inv_Details_ID"), 1L, 1);

                    b.Property<DateTime>("Expiration_Date")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<int>("Inv_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Expired")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Lock")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Used")
                        .HasColumnType("bit");

                    b.Property<int>("Patient_ID")
                        .HasColumnType("int");

                    b.Property<string>("Serial_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Used_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Used_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Inv_Details_ID");

                    b.HasIndex("Inv_ID")
                        .IsUnique();

                    b.HasIndex("Patient_ID");

                    b.HasIndex("Used_By");

                    b.ToTable("SM_INVENTORY_DETAILS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_ITEMS", b =>
                {
                    b.Property<int>("Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Item_ID"), 1L, 1);

                    b.Property<string>("BulkId_Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Decription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Item_Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Preorder_Level")
                        .HasColumnType("int");

                    b.Property<int>("SM_CATEGORYItem_Category_ID")
                        .HasColumnType("int");

                    b.HasKey("Item_ID");

                    b.HasIndex("SM_CATEGORYItem_Category_ID");

                    b.ToTable("SM_ITEMS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_PATIENT_DETAILS", b =>
                {
                    b.Property<int>("Patient_Details_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Patient_Details_ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Patient_ID")
                        .HasColumnType("int");

                    b.HasKey("Patient_Details_ID");

                    b.ToTable("SM_PATIENT_DETAILS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_PATIENTS", b =>
                {
                    b.Property<int>("Patient_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Patient_ID"), 1L, 1);

                    b.Property<string>("Custodians_NIC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Mobile_Number")
                        .HasColumnType("int");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Patient_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Requested_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Requested_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Patient_ID");

                    b.HasIndex("Requested_By");

                    b.ToTable("SM_PATIENTS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_PREFIX", b =>
                {
                    b.Property<int>("Prefix_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prefix_ID"), 1L, 1);

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Prefix_ID");

                    b.ToTable("SM_PREFIX");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_STOCK_OUT", b =>
                {
                    b.Property<int>("STOCK_OUT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("STOCK_OUT_ID"), 1L, 1);

                    b.Property<int>("Inv_Details_ID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Patient_ID")
                        .HasColumnType("int");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<int>("Requested_By")
                        .HasColumnType("int");

                    b.Property<DateTime>("Requested_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requested_Reason")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("STOCK_OUT_ID");

                    b.HasIndex("Requested_By");

                    b.ToTable("SM_STOCK_OUT");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_SUPPLIERS", b =>
                {
                    b.Property<int>("Supplier_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Supplier_ID"), 1L, 1);

                    b.Property<int>("Contact_Number")
                        .HasColumnType("int");

                    b.Property<string>("Registration_No")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Supplier_Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Supplier_ID");

                    b.ToTable("SM_SUPPLIERS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_USER", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Middle_Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Mobile_Number")
                        .HasColumnType("int");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Prefix_ID")
                        .HasColumnType("int");

                    b.Property<int>("SM_PREFIXPrefix_ID")
                        .HasColumnType("int");

                    b.Property<int>("SM_USER_TYPESUser_Type_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_Display_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User_Display_Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("User_Type_ID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("User_ID");

                    b.HasIndex("SM_PREFIXPrefix_ID");

                    b.HasIndex("SM_USER_TYPESUser_Type_ID");

                    b.ToTable("SM_USER");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_USER_TYPES", b =>
                {
                    b.Property<int>("User_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Type_ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("User_Type_ID");

                    b.ToTable("SM_USER_TYPES");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Roll")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"), 1L, 1);

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubjectId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_DOCTOR_DETAILS", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_USER", "SM_USER")
                        .WithOne("SM_DOCTOR_DETAILS")
                        .HasForeignKey("Stock_Master_DataAccess.Models.SM_DOCTOR_DETAILS", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SM_USER");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_GRN", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_SUPPLIERS", "SM_SUPPLIERS")
                        .WithMany("SM_GRN")
                        .HasForeignKey("SM_SUPPLIERSSupplier_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Master_DataAccess.Models.SM_USER", "User")
                        .WithMany()
                        .HasForeignKey("Submit_By")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SM_SUPPLIERS");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_GRN_DETAILS", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_GRN", "SM_GRN")
                        .WithMany("SM_GRN_DETAILS")
                        .HasForeignKey("SM_GRNGRN_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Master_DataAccess.Models.SM_ITEMS", "SM_ITEMS")
                        .WithMany("SM_GRN_DETAILS")
                        .HasForeignKey("SM_ITEMSItem_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SM_GRN");

                    b.Navigation("SM_ITEMS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_INVENTORY", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_GRN", "SM_GRN")
                        .WithMany("SM_INVENTORY")
                        .HasForeignKey("SM_GRNGRN_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Master_DataAccess.Models.SM_ITEMS", "SM_ITEMS")
                        .WithMany("SM_INVENTORY")
                        .HasForeignKey("SM_ITEMSItem_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SM_GRN");

                    b.Navigation("SM_ITEMS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_INVENTORY_DETAILS", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_INVENTORY", "SM_INVENTORY")
                        .WithOne("SM_INVENTORY_DETAILS")
                        .HasForeignKey("Stock_Master_DataAccess.Models.SM_INVENTORY_DETAILS", "Inv_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Master_DataAccess.Models.SM_PATIENTS", "SM_PATIENTS")
                        .WithMany("SM_INVENTORY_DETAILS")
                        .HasForeignKey("Patient_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Master_DataAccess.Models.SM_USER", "User")
                        .WithMany()
                        .HasForeignKey("Used_By")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SM_INVENTORY");

                    b.Navigation("SM_PATIENTS");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_ITEMS", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_CATEGORY", "SM_CATEGORY")
                        .WithMany("SM_ITEMS")
                        .HasForeignKey("SM_CATEGORYItem_Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SM_CATEGORY");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_PATIENTS", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_USER", "User")
                        .WithMany()
                        .HasForeignKey("Requested_By")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_STOCK_OUT", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_USER", "User")
                        .WithMany()
                        .HasForeignKey("Requested_By")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_USER", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.SM_PREFIX", "SM_PREFIX")
                        .WithMany("SM_USER")
                        .HasForeignKey("SM_PREFIXPrefix_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Master_DataAccess.Models.SM_USER_TYPES", "SM_USER_TYPES")
                        .WithMany("SM_USER")
                        .HasForeignKey("SM_USER_TYPESUser_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SM_PREFIX");

                    b.Navigation("SM_USER_TYPES");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.Student", b =>
                {
                    b.HasOne("Stock_Master_DataAccess.Models.Subject", "Subject")
                        .WithMany("Students")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_CATEGORY", b =>
                {
                    b.Navigation("SM_ITEMS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_GRN", b =>
                {
                    b.Navigation("SM_GRN_DETAILS");

                    b.Navigation("SM_INVENTORY");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_INVENTORY", b =>
                {
                    b.Navigation("SM_INVENTORY_DETAILS")
                        .IsRequired();
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_ITEMS", b =>
                {
                    b.Navigation("SM_GRN_DETAILS");

                    b.Navigation("SM_INVENTORY");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_PATIENTS", b =>
                {
                    b.Navigation("SM_INVENTORY_DETAILS");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_PREFIX", b =>
                {
                    b.Navigation("SM_USER");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_SUPPLIERS", b =>
                {
                    b.Navigation("SM_GRN");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_USER", b =>
                {
                    b.Navigation("SM_DOCTOR_DETAILS")
                        .IsRequired();
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.SM_USER_TYPES", b =>
                {
                    b.Navigation("SM_USER");
                });

            modelBuilder.Entity("Stock_Master_DataAccess.Models.Subject", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
